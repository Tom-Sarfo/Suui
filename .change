#include "shell.h"

/**
 * change_dir - a function that changes the directory
 * @argc: the number of arguments passed to the function
 * @argv: a pointer to the arguments passed to the function
 *
 */

int change_dir(int argc, char *argv[])
{
	char our_path[MAX_PATH_SIZE];
	char *home_dir, *pre_dir;

	if (argc == 1)
	{
		home_dir = getenv("HOME");
		if ( home_dir == NULL)
		{
			write(2, "HOME variable not set\n", 22);
			return (1);
		}
		if (chdir(home_dir) != 0)
		{
			perror("could not change directory");
			return (1);
		}
	}
	else if (argc == 2)
	{
		if (str_cmp(argv[1], "-") == 0)
		{
			pre_dir = getenv("OLDPWD");
			if (pre_dir == NULL)
			{
				write(2, "OLDPWD not set\n", 15);
				return (1);
			}
			if (chdir(argv[1]) != 0)
			{
				perror("could not change directory");
				return (1);
			}
		}
		else
		{
			 if (chdir(argv[1]) != 0)
			 {
				 perror("could not change directory");
				 return (1);
			 }
		}
	}
	else
	{
		write(2, "Usage: cd [name of directory]\n", 30);
		return (1);
	}
	/*return (0);
}


 * update_PWD - a function that updates the PWD variable
 * @our_path: a buffer that stores the current working directory
 * @MAX_PATH_SIZE: the maximum size a path can be
 * Return: 0 if successful
 */

/*int update_PWD(char *our_path)
{
	int argc = 0;
	char *argv[2];

	change_dir(argc, argv);*/
	
	if (getcwd(our_path, MAX_PATH_SIZE) == NULL)
	{
		perror("failed to get cwd");
		return(1);
	}
	if (setenv("PWD", our_path, 1) != 0)
	{
		perror("failed to set environment");
		return (1);
	}

	return (0);
}



